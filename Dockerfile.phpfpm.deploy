# 基於 PHP 8.3 FPM Alpine 映像
FROM php:8.3-fpm-alpine

# 安裝必需的系統包和 PHP 擴展
RUN apk add --no-cache \
    libpng-dev \
    libjpeg-turbo-dev \
    freetype-dev \
    libxml2-dev \
    oniguruma-dev \
    bash \
    git \
    curl \
    zip \
    unzip \
    icu-dev \
    autoconf \
    g++ \
    make \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) \
       pdo_mysql \
       mbstring \
       exif \
       pcntl \
       bcmath \
       gd \
       intl \
       xml \
       opcache \
    && pecl install redis \
    && docker-php-ext-enable redis

# 安裝 Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# 設置工作目錄
WORKDIR /var/www

# Copy deploy.ini
COPY ./docker/php/local.ini /usr/local/etc/php/conf.d/local.ini

# Copy application code
COPY . /var/www

# Set permissions
RUN chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache /var/www/database  \
    && chmod -R 775 /var/www/storage /var/www/bootstrap/cache \
    && chmod -R 775 /var/www/database

# Remove vendor directory and install dependencies
RUN cp .env.example .env \
    && rm -rf vendor \
    && composer install --optimize-autoloader \
    && composer clear-cache \
    && php artisan key:generate \
    && php artisan migrate:fresh --seed

COPY ./docker/docker-entrypoint.sh /var/www/
RUN ["chmod", "+x", "/var/www/docker-entrypoint.sh"]
ENTRYPOINT ["/var/www/docker-entrypoint.sh"]
